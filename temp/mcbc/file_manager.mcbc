# MCCP行为代码

## 模块：mccp_toolchain.mccp.file_manager

### 概述
- 目的：抽象并管理MCCP工具链中的所有文件系统交互，确保根据MCCP结构和配置一致且可靠地访问项目文件和目录。
- 职责：
    - 创建标准的MCCP项目目录结构。
    - 从特定文件中读取内容。
    - 将内容写入特定文件，必要时创建父目录。
    - 根据项目根目录、层映射和文件名确定文件路径。
    - 列出特定项目层中的文件。
    - 从项目内的任何路径中识别项目根目录。
- 交互：严重依赖`mccp.config`以了解项目结构和层映射。被几乎所有需要访问或管理文件的其他模块使用，尤其是`core.build`、`mccp.symbols`和`mccp.config`。使用标准操作系统库进行文件操作。

### 组件

#### 类：FileManager
- 描述：一个服务类，提供基于配置的MCCP项目结构的高级功能，用于管理项目文件和目录。
- 行为：
    - 初始化（`__init__`）：
        - 目的：通过提供对项目配置的访问来准备文件管理器。
        - 过程：存储对配置管理器的引用，其中包含有关不同层的目录名称等基本信息。如有需要，初始化底层文件系统交互库。
        - 依赖项：需要`mccp_toolchain.mccp.config.ConfigManager`实例，并使用标准OS库（`os`、`pathlib`）。
    - 创建项目结构（`create_project_structure`）：
        - 目的：生成新MCCP项目所需的初始目录集和占位符文件。
        - 过程：读取标准目录结构定义（可能来自配置或模板）。创建必要的目录（例如，`config`、`src_mcbc`、`src_mcpc`、`mccp_symbols`）。使用默认内容初始化关键文件（如`mccp_config.json`）。确保设置所需的权限。
        - 输入：新项目的根目录路径（`project_path`）。
        - 输出：一个布尔值，指示结构创建是否成功。
        - 依赖项：使用`ConfigManager`获取目录名称和可能的默认文件内容。可能使用`JsonParser`写入初始JSON文件。
    - 读取文件（`read_file`）：
        - 目的：检索指定文件的内容。
        - 过程：以读取模式打开位于`file_path`的文件。将整个内容作为字符串读取。处理潜在错误，例如文件不存在或权限问题。
        - 输入：文件路径（`file_path`）。
        - 输出：文件内容作为字符串，如果无法读取文件（例如，未找到）则为`None`。
    - 写入文件（`write_file`）：
        - 目的：将提供的内容写入指定文件。
        - 过程：确保`file_path`的父目录存在，如有需要则创建它们。以写入模式打开文件（覆盖现有内容）。将`content`字符串写入文件。处理写入过程中可能出现的潜在错误。
        - 输入：要写入文件的路径（`file_path`）以及内容字符串（`content`）。
        - 输出：一个布尔值，指示写入操作是否成功。
    - 获取文件路径（`get_file_path`）：
        - 目的：根据其简单名称，为位于特定MCCP项目层中的文件构造完整的绝对文件系统路径。
        - 过程：获取项目根路径。使用`ConfigManager`查找与`layer_key`对应的目录名称（例如，'behavior_code_dir'映射到'src_mcbc'）。使用适当的路径分隔符将项目根目录、层目录名称和`file_name`组合在一起。
        - 输入：项目根路径（`project_path`）、识别层的键（`layer_key`）以及文件的简单名称（`file_name`）。
        - 输出：完整的文件路径作为字符串。
    - 列出层中的文件（`list_files_in_layer`）：
        - 目的：在项目的指定层目录中查找并列出所有具有特定扩展名的文件。
        - 过程：使用`get_file_path`（不带文件名）确定层目录的完整路径。根据需求递归或非递归地扫描此目录中的文件。过滤列表以仅包括与指定`extension`匹配的文件。返回路径列表。
        - 输入：项目根路径（`project_path`）、识别层的键（`layer_key`）以及所需的文件扩展名（`extension`）。
        - 输出：一个字符串列表，其中每个字符串是符合标准的文件路径。

#### 函数：从路径中获取项目根目录（`get_project_root_from_path`）
- 描述：给定一个位于MCCP项目内的路径，尝试定位项目的根目录。
- 行为：
    - 目的：通过从给定路径向上搜索，发现项目的基目录。
    - 过程：从提供的`any_path_within_project`开始。检查当前目录中是否存在已知的项目指示文件（例如，`mccp_config.json`）。如果找到，该目录即为根目录。如果没有找到，则向上移动一个目录层级并重复检查，直到找到该文件或到达文件系统根目录。
    - 输入：可能位于MCCP项目内的任意路径字符串（`any_path_within_project`）。
    - 输出：如果找到，则返回项目根目录的路径字符串，否则返回`None`。