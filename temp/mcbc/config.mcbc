# MCCP行为代码

## 模块：mccp_toolchain.mccp.config

### 概述
- 目的：管理从`mccp_config.json`加载的项目配置数据，提供集中访问控制工具链行为的设置。
- 职责：
    - 从项目目录中加载配置文件。
    - 将JSON内容解析为可用的数据结构。
    - 提供基于键检索特定配置设置的方法。
    - 提供访问频繁使用的配置部分（如层目录或构建规则）的辅助方法。
- 交互：与`mccp.file_manager`交互以读取配置文件，与`mccp.parsers.JsonParser`交互以处理其内容。被几乎所有需要访问项目特定或工具链范围设置的其他模块使用。

### 组件

#### 类：ConfigManager
- 描述：一个服务类，负责加载、持有并提供对`mccp_config.json`中定义的项目配置数据的访问。
- 行为：
    - 初始化（`__init__`）：
        - 目的：通过提供必要的文件处理服务来准备配置管理器。
        - 过程：接收文件管理器的实例，该实例将用于内部读取配置文件。初始化一个内部结构以持有加载的配置数据（最初为空）。
        - 依赖项：需要`mccp_toolchain.mccp.file_manager.FileManager`实例。
    - 加载配置（`load_config`）：
        - 目的：从指定项目目录中读取`mccp_config.json`文件并解析其内容。
        - 过程：在`project_path`内构建`mccp_config.json`的完整路径。使用文件管理器读取文件内容。使用JSON解析器将文件内容字符串转换为Python字典或等效结构。将此结构存储在内部以便后续访问。如果文件不存在或为无效JSON，则处理错误。
        - 输入：项目的根路径（`project_path`）。
        - 输出：一个布尔值，指示配置是否成功加载。
        - 依赖项：使用`mccp_toolchain.mccp.file_manager.FileManager`读取文件，使用`mccp_toolchain.mccp.parsers.JsonParser`解析JSON。
    - 获取设置（`get_setting`）：
        - 目的：使用点分隔的键路径从加载的配置数据结构中检索特定配置值。
        - 过程：接收一个`key`字符串（例如，'llm_settings.model'）。使用键路径的部分在内部配置数据结构中导航以查找请求的值。处理键或中间路径不存在的情况。
        - 输入：到所需设置的点分隔字符串路径（`key`）。
        - 输出：与键关联的值，或者如果未找到，则可能返回`None`或默认值（行为待定）。返回类型灵活（`any`），因为配置值可以是字符串、数字、布尔值、列表或字典。
    - 获取层目录（`get_layer_dir`）：
        - 目的：检索特定MCCP层类型对应的目录名称，如配置中定义的。
        - 过程：在加载的配置数据的“layer_mapping”部分中查找提供的`layer_key`（例如，'behavior_code_dir'）。
        - 输入：识别层映射的键（`layer_key`）。
        - 输出：与该层关联的目录名称的字符串。
    - 获取构建规则（`get_build_rule`）：
        - 目的：检索特定构建或反向构建规则的完整配置字典。
        - 过程：在加载的配置数据的“build_rules”或“reverse_build_rules”部分中查找提供的`rule_key`（例如，'mcbc_to_mcpc'）。
        - 输入：识别所需构建规则的键（`rule_key`）。
        - 输出：包含该规则详细配置的字典（例如，输入/输出扩展名、LLM提示模板）。